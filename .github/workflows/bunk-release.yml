name: Release Bunk
run-name: Release Bunk (via ${{ github.event_name }} on ${{ inputs.ref }})

on:
  workflow_dispatch:
    inputs:
      ref:
        type: string
        default: ''
        description: Target branch or ref to run build against
  push:
    branches:
      - main
    paths:
      - .github/workflows/bunk-release.yml


jobs:

  # create-release:
  #   name: Create Release
  #   runs-on: ubuntu-18.04
  #   steps:
  #   - name: Create Release
  #     id: create_release
  #     uses: actions/create-release@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       tag_name: ${{ github.ref }}
  #       release_name: Release ${{ github.ref }}
  #       draft: false
  #       prerelease: true
  #   - name: Output Release URL File
  #     run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
  #   - name: Save Release URL File for publish
  #     uses: actions/upload-artifact@v1
  #     with:
  #       name: release_url
  #       path: release_url.txt

  build:
    name: Build packages
    # needs: create-release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - macos-14
          # - ubuntu-20.04
          # - windows-2019
        include:
          - os: macos-14
            CMD_LIST_DIR: ls -lR
            BUILD_OUTPUT_DIR: Bunk.app
          # - os: ubuntu-20.04
          #   CMD_LIST_DIR: ls -lR
          #   BUILD_OUTPUT_DIR: Bunk
          # - os: windows-2019
          #   CMD_LIST_DIR: tree /f
          #   BUILD_OUTPUT_DIR: Bunk


    steps:
      - uses: actions/checkout@v3
        with:
          repository: jahan01/bunk-qt
          ref: ${{ inputs.ref }}
          ssh-key: ${{ secrets.BUNK_DEPLOY_KEY }}

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # sed -i.bac '/^pyodbc/ s/$/ --no-binary :all:/' requirements/base.txt
      # more requirements/base.txt
      - name: Install unixodbc
        if: matrix.os == 'macos-14'
        run: |
          which python
          which pip
          brew install unixodbc

      - name: Install dependencies
        run: |
          which python
          which pip
          python -m pip install --upgrade pip
          sed -i.bac 's/pyodbc==4.0.39/pyodbc==5.1.0/g' base.txt
          more requirements/base.tx
          pip install -r requirements/base.txt
          pip install -r requirements/build.txt

      - name: Build package
        run: python bundle.py

      - name: List dist
        run: ${{ matrix.CMD_LIST_DIR}} dist

      - name: Archive Build
        uses: thedoctor0/zip-release@main
        with:
          type: zip
          directory: dist
          filename: Bunk-${{ matrix.os }}.zip

      - uses: actions/upload-artifact@v3
        with:
          name: Bunk-${{ matrix.os }}
          path: ./dist/Bunk-${{ matrix.os }}.zip

      - uses: actions/upload-artifact@v3
        with:
          name: base.txt
          path: requirements/base.txt

      # - name: Load Release URL File from release job
      #   uses: actions/download-artifact@v1
      #   with:
      #     name: release_url

      # - name: Get Release File Name & Upload URL
      #   id: get_release_info
      #   shell: bash
      #   run: |
      #     value=`cat release_url/release_url.txt`
      #     echo ::set-output name=upload_url::$value

      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.get_release_info.outputs.upload_url }}
      #     asset_path: ./dist/**
      #     asset_name: Bunk-${{ matrix.os }}
